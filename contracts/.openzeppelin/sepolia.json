{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x77CfaF6949E6C834ceBd4957aFbB186cDdCfa46F",
      "txHash": "0x4dd1d847887746fe287561866825a647a654e323473191068547b1bd23318f39",
      "kind": "uups"
    },
    {
      "address": "0xFe6b258d1242c81b7335cA51173a49a9F8735405",
      "txHash": "0xfd30396d397a632958cb2bb781cac87b86be6413a3edac9e53a0324f0f921ace",
      "kind": "uups"
    },
    {
      "address": "0x0193Ed9DFde9243A8DD420926900aBc9648c2124",
      "txHash": "0xd520a6b11174cf39b6e5a2663f4c1218ca6c00e3d03b478d18409cb3ef9f12f5",
      "kind": "uups"
    },
    {
      "address": "0x529CaD80Eb5839772e43Bcbe20498F2792b58bb5",
      "txHash": "0x8e95a302b57503f8037462b443b2b00d72f71d4e34c3ce203e30b85b4a2d5d50",
      "kind": "uups"
    }
  ],
  "impls": {
    "f85d9f2c3f8b9bf333b95a6b62ef1ce19176359d7c2b817ce70d9c31038807c7": {
      "address": "0x07Aa3e1e7c8C62508f2EE74F9AD75554bDC34bC1",
      "txHash": "0x97c8ae20d1dbb7d324b1b2c031d74e89f9409ab146cf42c07a11f1eab94eb6f3",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)874_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)451_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)307_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)755_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c8b0f1161062cb89921ac255fc1f03a20aa8995888bba7bf2b466f5bfe0c58ce": {
      "address": "0x6504DD2374313f6c3eA0C069bC626397CBF68230",
      "txHash": "0xa86a653bc650abaa390f262e2421b704579b4f5ec2b239d89b34231dcf051793",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "MINTER_ROLE",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "VeOwn",
            "src": "contracts/implementations/veOWN.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)451_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)307_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4bbbde28683c61931af1a667d9fe2afb24ca991fe5ffd33aa98835ae8d0c72fb": {
      "address": "0x6298B52d04985efe302360D4e9A112FD91FC329d",
      "txHash": "0xbb6952b4836c1616a2ce134b051b0c308e760a6470c33b9f68c6e66699d53dab",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "own",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IOwn)2349",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:18"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1089",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:19"
          },
          {
            "label": "presaleRounds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(PresaleRound)2364_storage)dyn_storage",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:21"
          },
          {
            "label": "presalePurchases",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_array(t_struct(PresalePurchase)2378_storage)dyn_storage)",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:23"
          },
          {
            "label": "startPresaleTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:25"
          },
          {
            "label": "totalSales",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(PresalePurchase)2378_storage)dyn_storage": {
            "label": "struct IPresale.PresalePurchase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PresaleRound)2364_storage)dyn_storage": {
            "label": "struct IPresale.PresaleRound[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1089": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IOwn)2349": {
            "label": "contract IOwn",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(PresalePurchase)2378_storage)dyn_storage)": {
            "label": "mapping(address => struct IPresale.PresalePurchase[])",
            "numberOfBytes": "32"
          },
          "t_struct(PresalePurchase)2378_storage": {
            "label": "struct IPresale.PresalePurchase",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usdtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(PresaleRound)2364_storage": {
            "label": "struct IPresale.PresaleRound",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "6baaeb8e0c519ec26cba9c1a20b3a3faad9be36b022cdced91d4a8690a240c4d": {
      "address": "0xb64C31DF2a630aBFcb3B5C7d7556906044071366",
      "txHash": "0xa595cbdb65dc7b17b4874d0ee67a5bf030c85a6acc1dcd38f843a2221de5a7df",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "ownToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IOwn)5068",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:24"
          },
          {
            "label": "veOwn",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IveOwn)5217",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:25"
          },
          {
            "label": "sablierLockup",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISablierLockup)5087",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:26"
          },
          {
            "label": "sablierStreamId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:28"
          },
          {
            "label": "maximumLockDays",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:30"
          },
          {
            "label": "minimumLockDays",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:31"
          },
          {
            "label": "dailyRewardAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:33"
          },
          {
            "label": "lastRewardValuesWeeklyCachedWeek",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:35"
          },
          {
            "label": "stakingStartWeek",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:37"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:39"
          },
          {
            "label": "totalRewardsIssued",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:41"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:44"
          },
          {
            "label": "totalPositions",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:46"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_struct(StakePosition)5104_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:47"
          },
          {
            "label": "usersPositions",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:48"
          },
          {
            "label": "validVeOwnAdditionsInDay",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:49"
          },
          {
            "label": "validVeOwnSubtractionsInDay",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:50"
          },
          {
            "label": "dailyRewardValueHistory",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:52"
          },
          {
            "label": "rewardValuesWeeklyCache",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(RewardValuesWeeklyCache)5118_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:53"
          },
          {
            "label": "boostDetails",
            "offset": 0,
            "slot": "19",
            "type": "t_array(t_struct(BoostDetails)5111_storage)dyn_storage",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:649"
          },
          {
            "label": "finalBoostWeek",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:655"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)1250_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlEnumerableStorage)162_storage": {
            "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
            "members": [
              {
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)1250_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)1250_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)1118_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)241_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)389_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)1118_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(BoostDetails)5111_storage)dyn_storage": {
            "label": "struct IStake.BoostDetails[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IOwn)5068": {
            "label": "contract IOwn",
            "numberOfBytes": "20"
          },
          "t_contract(ISablierLockup)5087": {
            "label": "contract ISablierLockup",
            "numberOfBytes": "20"
          },
          "t_contract(IveOwn)5217": {
            "label": "contract IveOwn",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RewardValuesWeeklyCache)5118_storage)": {
            "label": "mapping(uint256 => struct IStake.RewardValuesWeeklyCache)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakePosition)5104_storage)": {
            "label": "mapping(uint256 => struct IStake.StakePosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(BoostDetails)5111_storage": {
            "label": "struct IStake.BoostDetails",
            "members": [
              {
                "label": "durationInWeeks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardValuesWeeklyCache)5118_storage": {
            "label": "struct IStake.RewardValuesWeeklyCache",
            "members": [
              {
                "label": "weeklyRewardPerTokenCached",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validVeOwnAtEndOfWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dailyRewardAmountAtEndOfWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakePosition)5104_storage": {
            "label": "struct IStake.StakePosition",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "veOwnAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "startDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "finalDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastWeekRewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControlEnumerable": [
            {
              "contract": "AccessControlEnumerableUpgradeable",
              "label": "_roleMembers",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)1250_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:19",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
