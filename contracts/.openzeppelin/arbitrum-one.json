{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xD1a599590307737fa3f7CBF436D7E5FB74e1112a",
      "txHash": "0xe3e3e1b50d5f2303115b2b1797c5ae2d7ef2bdb5c0d1165f6287647c535db28f",
      "kind": "uups"
    },
    {
      "address": "0xfb4715990DD2873fC1D56f6312078067191AD0c5",
      "txHash": "0xf33140d95612deac8a549636b2dec1903b0e0c76f6e908d781f4fa548e87b11f",
      "kind": "uups"
    },
    {
      "address": "0x79F6BCEF243d63770C95d0032869Fc6f0C222Eef",
      "txHash": "0x8ac8df5420877e00099b9f03cdb1065487c79e909a022ea961b6875e51d4378f",
      "kind": "uups"
    },
    {
      "address": "0x34C0bDA21252817059A180fbD067826d361A5337",
      "txHash": "0xe5ea33c4b26c5172209e6eda3da5ce5afe44a4be7c79139691ee6a41ca49c89e",
      "kind": "uups"
    }
  ],
  "impls": {
    "03e90dfec9071d016feb8b3f20ac557391ebb14494c25971b0e48e34d8808dda": {
      "address": "0x997343a20A822a3FA67A6C56D0854d5Bd622C49a",
      "txHash": "0x58ff9e9bc02c6d81858bfd806e5df64107c6924af30b7509d53f8a5b2a1de2da",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)879_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)456_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)307_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)760_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "2763734775f078bcec0ab594a0ce9434280988ee417f8b5b5973c17b5a167174": {
      "address": "0x293d67Ec3A2f593564d905CFa2ca311c91ABd614",
      "txHash": "0xefca4f0f848f292cc3cd368873a459a92e5d32022894bd59965b8a204c7d141e",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "stakeContract",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IStake)12121",
            "contract": "VeOwn",
            "src": "contracts/implementations/veOWN.sol:19"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)390_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)241_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_contract(IStake)12121": {
            "label": "contract IStake",
            "numberOfBytes": "20"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "4e6638362096fbc8db1bb46b2f7eacd5b6d20a9cdc093ac9607d4d11ec3b5f73": {
      "address": "0x121cE7E07F1059670F727628aC6E1DA9e5Ed08E3",
      "txHash": "0xf2ecb91f11cdfb0a6ce8413321e74bbe25ae430f53820c1395304fa9df97e65c",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "own",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IOwn)3342",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:22"
          },
          {
            "label": "usdt",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)1193",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:23"
          },
          {
            "label": "presaleRounds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_struct(PresaleRound)3359_storage)dyn_storage",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:25"
          },
          {
            "label": "presalePurchases",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_array(t_struct(PresalePurchase)3373_storage)dyn_storage)",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:27"
          },
          {
            "label": "startPresaleTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:29"
          },
          {
            "label": "totalSales",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:31"
          },
          {
            "label": "totalClaims",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Presale",
            "src": "contracts/implementations/Presale.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(PresalePurchase)3373_storage)dyn_storage": {
            "label": "struct IPresale.PresalePurchase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(PresaleRound)3359_storage)dyn_storage": {
            "label": "struct IPresale.PresaleRound[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)1193": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_contract(IOwn)3342": {
            "label": "contract IOwn",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(PresalePurchase)3373_storage)dyn_storage)": {
            "label": "mapping(address => struct IPresale.PresalePurchase[])",
            "numberOfBytes": "32"
          },
          "t_struct(PresalePurchase)3373_storage": {
            "label": "struct IPresale.PresalePurchase",
            "members": [
              {
                "label": "roundId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "usdtAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(PresaleRound)3359_storage": {
            "label": "struct IPresale.PresaleRound",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "allocation",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sales",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimTokensTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "1fc9fd8c5bd4f9bed93ad0add35d49f75db9884d85fa0758ff15c2f70f764416": {
      "address": "0x2923c0124E9A87340cc9AC103cF79AC0a7E907B7",
      "txHash": "0xffbdeb66349793fa5346eda6d024440f28d3f8612d1a77990c8e1ba6ec0b474f",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "ownToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IOwn)10237",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:24"
          },
          {
            "label": "veOwn",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IveOwn)10643",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:25"
          },
          {
            "label": "sablierLockup",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(ISablierLockup)10256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:26"
          },
          {
            "label": "sablierStreamId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:28"
          },
          {
            "label": "maximumLockDays",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:30"
          },
          {
            "label": "minimumLockDays",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:31"
          },
          {
            "label": "dailyRewardAmount",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:33"
          },
          {
            "label": "maximumDailyRewardAmount",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:34"
          },
          {
            "label": "lastRewardValuesWeeklyCachedWeek",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:36"
          },
          {
            "label": "stakingStartWeek",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:38"
          },
          {
            "label": "totalStaked",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:40"
          },
          {
            "label": "totalRewardsIssued",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:42"
          },
          {
            "label": "totalUsers",
            "offset": 0,
            "slot": "12",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:45"
          },
          {
            "label": "boostDetails",
            "offset": 0,
            "slot": "13",
            "type": "t_array(t_struct(BoostDetails)10288_storage)dyn_storage",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:47"
          },
          {
            "label": "finalBoostWeek",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:48"
          },
          {
            "label": "totalPositions",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:50"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_struct(StakePosition)10280_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:51"
          },
          {
            "label": "usersPositions",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:52"
          },
          {
            "label": "validVeOwnAdditionsInDay",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:53"
          },
          {
            "label": "validVeOwnSubtractionsInDay",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:55"
          },
          {
            "label": "dailyRewardValueHistory",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:58"
          },
          {
            "label": "rewardValuesWeeklyCache",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(RewardValuesWeeklyCache)10296_storage)",
            "contract": "Stake",
            "src": "contracts/implementations/Stake.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)2737_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlEnumerableStorage)162_storage": {
            "label": "struct AccessControlEnumerableUpgradeable.AccessControlEnumerableStorage",
            "members": [
              {
                "label": "_roleMembers",
                "type": "t_mapping(t_bytes32,t_struct(AddressSet)2737_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2737_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2591_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(InitializableStorage)241_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)394_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2591_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(BoostDetails)10288_storage)dyn_storage": {
            "label": "struct IStake.BoostDetails[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IOwn)10237": {
            "label": "contract IOwn",
            "numberOfBytes": "20"
          },
          "t_contract(ISablierLockup)10256": {
            "label": "contract ISablierLockup",
            "numberOfBytes": "20"
          },
          "t_contract(IveOwn)10643": {
            "label": "contract IveOwn",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RewardValuesWeeklyCache)10296_storage)": {
            "label": "mapping(uint256 => struct IStake.RewardValuesWeeklyCache)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakePosition)10280_storage)": {
            "label": "mapping(uint256 => struct IStake.StakePosition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(BoostDetails)10288_storage": {
            "label": "struct IStake.BoostDetails",
            "members": [
              {
                "label": "startWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "durationInWeeks",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "multiplier",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RewardValuesWeeklyCache)10296_storage": {
            "label": "struct IStake.RewardValuesWeeklyCache",
            "members": [
              {
                "label": "weeklyRewardPerTokenCached",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validVeOwnAtEndOfWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "dailyRewardAmountAtEndOfWeek",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(StakePosition)10280_storage": {
            "label": "struct IStake.StakePosition",
            "members": [
              {
                "label": "owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positionId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "ownAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "veOwnAmount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "finalDay",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "lastWeekRewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "rewardsClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControlEnumerable": [
            {
              "contract": "AccessControlEnumerableUpgradeable",
              "label": "_roleMembers",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)2737_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/extensions/AccessControlEnumerableUpgradeable.sol:19",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
